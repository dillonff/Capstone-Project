<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="au.edu.sydney.comp5703.cs30.chat.mapper.UserMapper">
    <resultMap id="UserEntityMap" type="au.edu.sydney.comp5703.cs30.chat.entity.User">
        <constructor>
            <arg column="username" javaType="String" />
        </constructor>
        <id column="id" property="id"></id>
        <result column="username" property="username"></result>
        <result column="phone" property="phone"></result>
        <result column="email" property="email"></result>
        <result column="password" property="password"></result>
        <result column="phone" property="phone"></result>
    </resultMap>

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into chat_user (
            username, password
        ) values (
            #{username}, #{password}
        )
    </insert>

    <select id="findById" resultMap="UserEntityMap">
        select * from chat_user where id=#{id} and not is_deleted
    </select>

    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT
            *
        FROM
            chat_user
        WHERE
            username = #{username} and not is_deleted
    </select>

    <update id="updatePassById">
        update chat_user set
                             password=#{password}
        where id=#{id}
    </update>

    <update id="updateInfoById">
        update chat_user set
                             username=#{username},
                             email=#{email},
                             phone=#{phone}
        where id=#{id}
    </update>

    <select id="findByEmail" resultMap="UserEntityMap">
        SELECT
            *
        FROM
            chat_user
        WHERE
            email = #{email} and not is_deleted
    </select>

    <select id="filter" resultMap="UserEntityMap">
        select
            cu.*
        from
            chat_user cu
        <if test="workspaceId != null">
            join chat_workspace_member cwm on (cwm.type = 0 and cwm.member_id = cu.id)
        </if>
        <if test="channelId != null">
            join chat_channel_member ccm on (ccm.user_id = cu.id)
        </if>
        <if test="organizationId != null">
            join chat_organization_member com on (com.user_id = cu.id)
        </if>
        <trim prefix="where" prefixOverrides="and | or">
            <if test="workspaceId != null">cwm.workspace_id = #{workspaceId}</if>
            <if test="channelId != null">and ccm.channel_id = #{channelId}</if>
            <if test="organizationId != null">and com.organization_id = #{organizationId}</if>
            and not cu.is_deleted
        </trim>
    </select>


</mapper>